name: GH Actions Cron CI
on:
  schedule:
    # 3 am Tuesdays and Fridays
    - cron: "0 3 * * 2,5"
  pull_request:
    branches:
      - develop

concurrency:
  # Probably overly cautious group naming.
  # Commits to develop/master will cancel each other, but PRs will only cancel
  # commits within the same PR
  group: "${{ github.ref }}-${{ github.head_ref }}-${{ github.workflow }}"
  cancel-in-progress: true

defaults:
  run:
    shell: bash -l {0}

env:
  CYTHON_TRACE_NOGIL: 1
  MPLBACKEND: agg

jobs:
  numpy_and_scipy_dev:
    if: "github.repository == 'MDAnalysis/mdanalysis'"
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
    - uses: actions/checkout@v3

    - name: setup_os
      uses: ./.github/actions/setup-os
      with:
        os-type: "ubuntu"

    - name: setup_micromamba
      uses: mamba-org/provision-with-micromamba@main
      with:
        environment-file: False
        environment-name: mda
        extra-specs: |
          python=="3.11"
          pip
        channels: jaimergp/label/unsupported-cudatoolkit-shim, conda-forge, bioconda

    - name: install_deps
      uses: ./.github/actions/setup-deps
      with:
        micromamba: true
        full-deps: true

      # overwrite installs by picking up nightly wheels
    - name: nightly_wheels
      run: |
        pip install --pre -U -i https://pypi.anaconda.org/scipy-wheels-nightly/simple scipy numpy h5py matplotlib

    - name: list_deps
      run: |
        micromamba list
        pip list

      # Intentionally going with setup.py builds so we can build with latest
    - name: build_srcs
      uses: ./.github/actions/build-src
      with:
        build-tests: true
        build-docs: false

    - name: run_tests
      run: |
        pytest -n $numprocs testsuite/MDAnalysisTests --durations=50 -W error::FutureWarning


  # Issue #3442
  native_march:
    if: "github.repository == 'MDAnalysis/mdanalysis'"
    runs-on: ubuntu-latest
    timeout-minutes: 60

    steps:
    - uses: actions/checkout@v3

    - name: setup_os
      uses: ./.github/actions/setup-os
      with:
        os-type: "ubuntu"

    - name: setup_micromamba
      uses: mamba-org/provision-with-micromamba@main
      with:
        environment-file: False
        environment-name: mda
        extra-specs: |
          python=="3.11"
          pip
        channels: jaimergp/label/unsupported-cudatoolkit-shim, conda-forge, bioconda

    - name: install_deps
      uses: ./.github/actions/setup-deps
      with:
        micromamba: true
        full-deps: true

    - name: set_extra_flags
      run: |
        sed -i "s/#extra_cflags =/extra_cflags = -march=native -mtune=native/g" package/setup.cfg
        cat package/setup.cfg
    - name: build_srcs
      uses: ./.github/actions/build-src
      with:
        build-tests: true
        build-docs: false

    - name: run_tests
      run: |
        pytest -n $numprocs testsuite/MDAnalysisTests --disable-pytest-warnings --durations=50


  old_ubuntu_macos:
    if: "github.repository == 'MDAnalysis/mdanalysis'"
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    strategy:
      fail-fast: false
      matrix:
        os: [ubuntu-20.04, macos-11]

    steps:
    - uses: actions/checkout@v3

    - name: setup_os
      uses: ./.github/actions/setup-os
      with:
        os-type: ${{ matrix.os }}

    - name: setup_micromamba
      uses: mamba-org/provision-with-micromamba@main
      with:
        environment-file: False
        environment-name: mda
        extra-specs: |
          python=="3.9"
          pip
        channels: jaimergp/label/unsupported-cudatoolkit-shim, conda-forge, bioconda

    - name: install_deps
      uses: ./.github/actions/setup-deps
      with:
        micromamba: true
        full-deps: true

    - name: build_srcs
      uses: ./.github/actions/build-src
      with:
        build-tests: true
        build-docs: false

    - name: run_tests
      run: |
        pytest -n $numprocs testsuite/MDAnalysisTests --disable-pytest-warnings --durations=50


  # Issue 1727
  pip-only-develop:
    if: "github.repository == 'MDAnalysis/mdanalysis'"
    runs-on: ubuntu-latest
    timeout-minutes: 60
    strategy:
        fail-fast: false
        matrix:
          python-version: ["3.10", "3.11"]
    steps:
    - uses: actions/checkout@v3

    - name: setup_os
      uses: ./.github/actions/setup-os
      with:
        os-type: "ubuntu"

    - uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: pip install mdanalysis
      run: |
        cd package && pip install .

    - name: pip install mdanalysistests
      run: |
        cd testsuite && pip install .

    - name: install_pip_extras
      run: |
        pip install pytest-xdist

    - name: run_tests
      run: |
        pytest -n $numprocs testsuite/MDAnalysisTests --disable-pytest-warnings --durations=50
        
  # Issue 4208
  conda-latest-release:
    # A set of runner to check that the latest conda release works as expected
    if: "github.repository == 'MDAnalysis/mdanalysis'"
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    strategy:
        fail-fast: false
        matrix:
          os: [ubuntu-latest, macos-latest]
          python-version: ["3.9", "3.10", "3.11"]
    steps:
    - uses: actions/checkout@v3

    - name: setup_micromamba
      uses: mamba-org/setup-micromamba@v1
      with:
        environment-name: mda
        create-args: >-
          python=${{ matrix.python-version }}
          pip
        # using jaime's shim to avoid pulling down the cudatoolkit
        condarc: |
          channels:
            - jaimergp/label/unsupported-cudatoolkit-shim
            - conda-forge
            - bioconda

    - name: install_deps
      uses: ./.github/actions/setup-deps
      with:
        micromamba: true
        full-deps: true

    - name: install_mdanalysis
      run: |
          micromamba install mdanalysis mdanalysistests

    - name: run_tests
      run: |
          pytest -n auto --pyargs MDAnalysisTests
          
  pypi-latest-release:
    # A set of runner to check that the latest conda release works as expected
    if: "github.repository == 'MDAnalysis/mdanalysis'"
    runs-on: ${{ matrix.os }}
    timeout-minutes: 60
    strategy:
        fail-fast: false
        matrix:
          os: [ubuntu-latest, macos-latest, windows-latest]
          python-version: ["3.9", "3.10", "3.11"]
    steps:
    - uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: install_mdanalysis
      run: |
          pip install mdanalysis mdanalysistests pytest-xdist

    - name: run_tests
      run: |
          pytest -n auto --pyargs MDAnalysisTests
