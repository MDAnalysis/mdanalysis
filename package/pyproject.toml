[build-system]
# Minimum requirements for the build system to execute
requires = [
    "Cython>=0.28",
    "packaging",
    # numpy requirement for wheel builds for distribution on PyPI - building
    # against 2.x yields wheels that are also compatible with numpy 1.x at
    # runtime.
    # Note that building against numpy 1.x works fine too - users and
    # redistributors can do this by installing the numpy version they like and
    # disabling build isolation.
    "numpy>=2.0.0",
    # Set to minimum version of setuptools that allows pyproject.toml
    "setuptools >= 40.9.0",
    "wheel",
]
build-backend = "setuptools.build_meta"

[project]
name = "MDAnalysis"
dynamic = ['version', 'readme']
license = {file = "LICENSE"}
description = "An object-oriented toolkit to analyze molecular dynamics trajectories."
authors = [
    {name = 'MDAnalysis Development Team', email = 'mdanalysis@numfocus.org'}
]
maintainers = [
    {name = 'MDAnalysis Core Developers', email = 'mdanalysis@numfocus.org'}
]
requires-python = ">=3.10"
dependencies = [
    'numpy>=1.23.2',
    'GridDataFormats>=0.4.0',
    'mmtf-python>=1.0.0',
    'joblib>=0.12',
    'scipy>=1.5.0',
    'matplotlib>=1.5.1',
    'tqdm>=4.43.0',
    'threadpoolctl',
    'packaging',
    'fasteners',
    'mda-xdrlib',
    'waterdynamics',
    'pathsimanalysis',
    'mdahole2',
]
keywords = [
    "python", "science", "chemistry", "biophysics", "molecular-dynamics",
    "computational-chemistry", "molecular-simulation", "analysis",
    "trajectory-analysis",
]
classifiers = [
    'Development Status :: 6 - Mature',
    'Environment :: Console',
    'Intended Audience :: Science/Research',
    'License :: OSI Approved :: GNU General Public License v3 or later (GPLv3+)',
    'Operating System :: POSIX',
    'Operating System :: MacOS :: MacOS X',
    'Operating System :: Microsoft :: Windows',
    'Programming Language :: Python',
    'Programming Language :: Python :: 3.10',
    'Programming Language :: Python :: 3.11',
    'Programming Language :: Python :: 3.12',
    'Programming Language :: C',
    'Topic :: Scientific/Engineering',
    'Topic :: Scientific/Engineering :: Bio-Informatics',
    'Topic :: Scientific/Engineering :: Chemistry',
    'Topic :: Software Development :: Libraries :: Python Modules',
]

[project.optional-dependencies]
extra_formats = [
    "netCDF4>=1.0",
    "h5py>=2.10",
    "chemfiles>=0.10",
    "parmed",
    "pyedr>=0.7.0",
    "pytng>=0.2.3",
    "gsd>3.0.0",
    "rdkit>=2020.03.1",
]
analysis = [
    "biopython>=1.80",
    "seaborn",
    "scikit-learn",
    "tidynamics>=1.0.0",
    'networkx>=2.0',
]
doc = [
    "sphinx",
    "sphinx-sitemap",
    "mdanalysis-sphinx-theme>=1.3.0",
    "sphinxcontrib-bibtex",
    "pybtex",
    "pybtex-docutils",
]

[project.urls]
Homepage = "https://www.mdanalysis.org"
Download = "https://github.com/MDAnalysis/mdanalysis/releases"
Documentation = "https://docs.mdanalysis.org/"
"User Guide" = "https://userguide.mdanalysis.org/"
"Issue Tracker" = "https://github.com/mdanalysis/mdanalysis/issues"
"Github Discussions" = "https://github.com/MDAnalysis/mdanalysis/discussions"
Discord = "https://discord.com/channels/807348386012987462/"
Blog = "https://www.mdanalysis.org/blog/"
Source = 'https://github.com/mdanalysis/mdanalysis'

[tool.setuptools]
# as a zipped egg the *.so files are not found (at
# least in Ubuntu/Linux)
zip-safe = false

[tool.setuptools.packages]
find = {}

[tool.setuptools.package-data]
MDAnalysis = [
    'analysis/data/*.npy',
]

[tool.black]
line-length = 79
target-version = ['py310', 'py311', 'py312']
extend-exclude = '.'
required-version = '24'
