language: generic

# Only build for develop and master (and PRs)
branches:
  only:
    - master
    - develop

os:
  - linux

env:
  global:
    - secure: "HIj3p+p2PV8DBVg/KGUx6n83KwB0ASE5FwOn0SMB9zxnzAqe8sapwdBQdMdq0sXB7xT1spJqRxuxOMVEVn35BNLu7bxMLfa4287C8YXcomnvmv9xruxAsjsIewnNQ80vtPVbQddBPxa4jKbqgPby5QhhAP8KANAqYe44pIV70fY="
    - GH_DOC_BRANCH=develop
    - GH_REPOSITORY=github.com/MDAnalysis/mdanalysis.git
    - GIT_CI_USER=TravisCI
    - GIT_CI_EMAIL=TravisCI@mdanalysis.org
    - MDA_DOCDIR=${TRAVIS_BUILD_DIR}/package/doc/html/html
    - MDA_OPTPACKAGES=opt/packages
    # Set default python version to avoid repetition later
    - BUILD_DOCS=false
    - PYTHON_VERSION=2.7
    - MAIN_CMD="python ./testsuite/MDAnalysisTests/mda_nosetests --processes=2 --process-timeout=400 --no-open-files --with-timer --timer-top-n 50"
    - MAIN_CMD_OPTIONS=""
    - COVERALLS=false
    - BUILD_CMD="pip install -v package/ && pip install testsuite/"
    - CONDA_DEPENDENCIES="numpy mmtf-python nose=1.3.7 mock six biopython networkx cython joblib nose-timer"
    - CONDA_ALL_DEPENDENCIES="numpy mmtf-python nose=1.3.7 mock six biopython networkx cython joblib nose-timer matplotlib netcdf4 scikit-learn scipy seaborn coveralls clustalw=2.1"
    # Install griddataformats from PIP so that scipy is only installed in the full build (#1147)
    - PIP_DEPENDENCIES='griddataformats'
  matrix:
    - NAME='minimal' PYTHON_VERSION=2.7 MAIN_CMD_OPTIONS='--with-memleak'

matrix:
  fast_finish: true
  include:
    - os: linux
      env: NAME="Doc"
           MAIN_CMD="cd package && python setup.py build_sphinx"
           BUILD_DOCS=true
           BUILD_CMD="cd ${TRAVIS_BUILD_DIR}/package && python setup.py build_ext --inplace"
           CONDA_DEPENDENCIES=${CONDA_ALL_DEPENDENCIES}

    - os: linux
      env: NAME="Lint"
           MAIN_CMD="pylint --rcfile=package/.pylintrc package/MDAnalysis && pylint --rcfile=package/.pylintrc testsuite/MDAnalysisTests"
           BUILD_CMD=""
           CONDA_DEPENDENCIES="pylint backports.functools_lru_cache"
           PIP_DEPENDENCIES=""

    - os: linux
      env: NAME='full'
           MAIN_CMD_OPTIONS='--with-coverage --cover-package MDAnalysis'
           CONDA_DEPENDENCIES=${CONDA_ALL_DEPENDENCIES}
           COVERALLS='true'


install:
  - wget http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh
  - bash miniconda.sh -b -p $(pwd)/miniconda
  - export PATH=$(pwd)/miniconda/bin:$PATH
  - conda config --add channels biobuilds
  - conda config --add channels MDAnalysis
  - conda config --add channels conda-forge
  - conda config --set always_yes yes
  - conda create -q -n pyenv python=$PYTHON_VERSION
  - source activate pyenv
  - conda install ${CONDA_DEPENDENCIES}
  - pip install ${PIP_DEPENDENCIES}
  # additional external tools (Issue #898) -- HOLE
  - |
    if [[ $NAME == 'full' ]]; then \
        bash ./maintainer/install_hole.sh $TRAVIS_OS_NAME "${HOME}/${MDA_OPTPACKAGES}"; \
        HOLE_BINDIR="${HOME}/${MDA_OPTPACKAGES}/hole2/exe"; \
        export PATH=${PATH}:${HOLE_BINDIR}; \
    fi
  - if [[ $BUILD_DOCS == "true" ]] ; then conda install sphinx=1.5.1; fi
  - eval $BUILD_CMD

script:
  - cd ${TRAVIS_BUILD_DIR}
  - echo $MAIN_CMD $MAIN_CMD_OPTIONS
  - eval $MAIN_CMD $MAIN_CMD_OPTIONS

after_success:
  - if [[ $COVERALLS == 'true' ]]; then coveralls; fi
  - |
     test ${TRAVIS_PULL_REQUEST} == "false" && \
     test ${TRAVIS_BRANCH} == ${GH_DOC_BRANCH} && \
     test "${BUILD_DOCS}" == "true" && \
     bash ${TRAVIS_BUILD_DIR}/maintainer/deploy_docs.sh
