# Only build for develop and master (and PRs)
branches:
  only:
    - master
    - develop

os:
  - linux
  - osx
env:
  global:
    - secure: "HIj3p+p2PV8DBVg/KGUx6n83KwB0ASE5FwOn0SMB9zxnzAqe8sapwdBQdMdq0sXB7xT1spJqRxuxOMVEVn35BNLu7bxMLfa4287C8YXcomnvmv9xruxAsjsIewnNQ80vtPVbQddBPxa4jKbqgPby5QhhAP8KANAqYe44pIV70fY="
    - GH_DOC_BRANCH: develop
    - GH_REPOSITORY: github.com/MDAnalysis/mdanalysis.git
    - GIT_CI_USER: TravisCI
    - GIT_CI_EMAIL: TravisCI@mdanalysis.org
    - MDA_DOCDIR: package/doc/html
    - MDA_OPTPACKAGES: opt/packages
  matrix:
    - SETUP=minimal PYTHON_VERSION=2.7
    - SETUP=full PYTHON_VERSION=2.7
    - SETUP=minimal PYTHON_VERSION=3.3
    - SETUP=full PYTHON_VERSION=3.3
matrix:
  allow_failures:
    - env: SETUP=minimal PYTHON_VERSION=3.3
    - env: SETUP=full PYTHON_VERSION=3.3

before_install:
  - if [[ $TRAVIS_OS_NAME == 'osx' ]]; then wget http://repo.continuum.io/miniconda/Miniconda-latest-MacOSX-x86_64.sh -O miniconda.sh; fi
  - if [[ $TRAVIS_OS_NAME == 'linux' ]]; then wget http://repo.continuum.io/miniconda/Miniconda-latest-Linux-x86_64.sh -O miniconda.sh; fi
  - chmod +x miniconda.sh
  - ./miniconda.sh -b -p $(pwd)/miniconda
  - export PATH=$(pwd)/miniconda/bin:$PATH
  - conda config --add channels MDAnalysis
  - conda update --yes conda
install:
  - if [[ $SETUP == 'full' ]]; then conda create --yes -q -n pyenv python=$PYTHON_VERSION numpy scipy nose=1.3.7 sphinx=1.3 griddataformats six; fi
  - if [[ $SETUP == 'minimal' ]]; then conda create --yes -q -n pyenv python=$PYTHON_VERSION numpy nose=1.3.7 sphinx=1.3 griddataformats six; fi
  - source activate pyenv
  - if [[ $SETUP == 'full' ]]; then conda install --yes cython biopython matplotlib networkx netcdf4; fi
  - if [[ $SETUP == 'minimal' ]]; then conda install --yes cython biopython networkx; fi
# ensure that cython files are rebuilt
  - find . -name '*.pyx' -exec touch '{}' \;
  - pip install -v package/
  - pip install testsuite/
  - pip install coveralls
  - chmod +x testsuite/MDAnalysisTests/mda_nosetests
# additional external tools (Isssue #898) -- HOLE
  - |
     if [[ $SETUP == 'full' ]]; then \
         bash ./maintainer/install_hole.sh $TRAVIS_OS_NAME "${HOME}/${MDA_OPTPACKAGES}"; \
         HOLE_BINDIR="${HOME}/${MDA_OPTPACKAGES}/hole2/exe"; \
         export PATH=${PATH}:${HOLE_BINDIR}; \
     fi
  # we should still be here but make doubly sure:
  - cd ${TRAVIS_BUILD_DIR}

# command to run tests
script:
  - ./testsuite/MDAnalysisTests/mda_nosetests --with-coverage --cover-package MDAnalysis --processes=2 --process-timeout=300 --with-memleak
  - |
     test ${TRAVIS_PULL_REQUEST} == "false" && \
     test ${TRAVIS_BRANCH} == ${GH_DOC_BRANCH} && \
     test "${TRAVIS_BUILD_NUMBER}.1" == "${TRAVIS_JOB_NUMBER}" && \
     (cd ./package && python setup.py build_ext --inplace) && \
     (cd ./package/doc/sphinx && make clean html) || \
     true
after_success:
  - coveralls
  - |
     test ${TRAVIS_PULL_REQUEST} == "false" && \
     test ${TRAVIS_BRANCH} == ${GH_DOC_BRANCH} && \
     test "${TRAVIS_BUILD_NUMBER}.1" == "${TRAVIS_JOB_NUMBER}" && \
     bash ./maintainer/deploy_docs.sh
