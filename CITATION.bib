%% Citations for the main MDAnalysis Library
%% Please see https://docs.mdanalysis.org/stable/documentation_pages/references.html
%% for more details and citations for included methods.

%% Saved with string encoding Unicode (UTF-8) 



@article{Michaud-Agrawal:2011,
	Abstract = {MDAnalysis is an object-oriented library for structural and temporal analysis of molecular dynamics (MD) simulation trajectories and individual protein structures. It is written in the Python language with some performance-critical code in C. It uses the powerful NumPy package to expose trajectory data as fast and efficient NumPy arrays. It has been tested on systems of millions of particles. Many common file formats of simulation packages including CHARMM, Gromacs, and NAMD and the Protein Data Bank format can be read and written.  Atoms can be selected with a syntax similar to CHARMM's powerful selection commands. MDAnalysis enables both novice and experienced programmers to rapidly write their own analytical tools and access data stored in trajectories in an easily accessible manner that facilitates interactive explorative analysis. MDAnalysis has been tested on and works for most Unix-based platforms such as Linux and Mac OS X. It is freely available under the GNU Public License from http://mdanalysis.googlecode.com.},
	Author = {Michaud-Agrawal, Naveen and Denning, Elizabeth Jane and Woolf, Thomas B. and Beckstein, Oliver},
	Doi = {10.1002/jcc.21787},
	Journal = {J Comp Chem},
	Keywords = {MDAnalysis, molecular dynamics (MD) simulation, Python},
	Pages = {2319--2327},
	Title = {{MDAnalysis}: A Toolkit for the Analysis of Molecular Dynamics Simulations},
	Volume = 32,
	Year = 2011,
}

@inproceedings{Gowers:2016,
	Abstract = {MDAnalysis (http://mdanalysis.org) is a library for structural and temporal analysis of molecular dynamics (MD) simulation trajectories and individual protein structures. MD simulations of biological molecules have become an important tool to elucidate the relationship between molecular structure and physiological function. Simulations are performed with highly optimized software packages on HPC resources but most codes generate output trajectories in their own formats so that the development of new trajectory analysis algorithms is confined to specific user communities and widespread adoption and further development is delayed. MDAnalysis addresses this problem by abstracting access to the raw simulation data and presenting a uniform object-oriented Python interface to the user. It thus enables users to rapidly write code that is portable and immediately usable in virtually all biomolecular simulation communities. The user interface and modular design work equally well in complex scripted work flows, as foundations for other packages, and for interactive and rapid prototyping work in IPython / Jupyter notebooks, especially together with molecular visualization provided by nglview and time series analysis with pandas. MDAnalysis is written in Python and Cython and uses NumPy arrays for easy interoperability with the wider scientific Python ecosystem. It is widely used and forms the foundation for more specialized biomolecular simulation tools. MDAnalysis is available under the GNU General Public License v2. },
	Address = {Austin, TX},
	Author = {Gowers, Richard J. and Linke, Max and Barnoud, Jonathan and Reddy, Tyler J. E. and Melo, Manuel N. and Seyler, Sean L. and Dotson, David L and Doma{\'n}ski, Jan and Buchoux, S{\'e}bastien and Kenney, Ian M. and Beckstein, Oliver},
	Booktitle = {{P}roceedings of the 15th {P}ython in {S}cience {C}onference},
	Doi = {10.25080/Majora-629e541a-00e},
	Editor = {Benthall, Sebastian and Rostrup, Scott},
	Keywords = {MDAnalysis, Python, SPIDAL},
	Organization = {SciPy},
	Pages = {98--105},
	Title = {{MDAnalysis}: A {Python} package for the Rapid Analysis of Molecular Dynamics Simulations},
	Year = 2016,
}
